<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>LoginExample</display-name>
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>dbURL</param-name>
		<param-value>jdbc:mysql://localhost/mysql_db</param-value>
	</context-param>
	<context-param>
		<param-name>dbUser</param-name>
		<param-value>mysql_user</param-value>
	</context-param>
	<context-param>
		<param-name>dbUserPwd</param-name>
		<param-value>mysql_pwd</param-value>
	</context-param>


	<!-- If we define webapp specific servlet filters in WAR's own web.xml, 
		then the order of execution of the filters will be the same as the order 
		in which they are defined in the web.xml. 
	
	Read this to know how it can  be done with @Webfilter annotation
		
https://stackoverflow.com/questions/6560969/how-to-define-servlet-filter-order-of-execution-using-annotations-in-war -->
	<filter>
		<filter-name>RequestLoggingFilter</filter-name>
		<filter-class>com.journaldev.servlet.RequestLoggingFilter</filter-class>
	</filter>
	<filter>
		<filter-name>AuthenticationFilter</filter-name>
		<filter-class>com.journaldev.servlet.AuthenticationFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>RequestLoggingFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>AuthenticationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>